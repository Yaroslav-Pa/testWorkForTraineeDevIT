// Створюю асинхрону функцію дял виконання функції із переданими аргументами
async function bulkRun(functionsAndArgs) {
  // Створюю масив відповідь
  const results = [];

  // За циклом вибираю кожну пару [функцію та аргументи] з поданого масиву
  for (const [func, args] of functionsAndArgs) {
    // Створюю проміс для виконання функції
    const promise = new Promise((resolve) => {
      //Викликаю функцію з переданими аргументами (перед цим розпакувавши масив) та колбеком cb
      func(...args, (data) => {
        //Записую дані
        results.push(data);
        // Відзначаю завершення функції (закриваю проміс)
        resolve();
      });
    });

    // Завершуємо виконання циклу після виконання поточної функції та очікуємо проміс
    await promise;
  }

  // Повертаю масив відповідь
  return results;
}

// Створюю функції, які приймають аргументи та викликають переданий колбек з результатом
const f1 = (cb) => {
  cb(1);
};
const f2 = (a, cb) => {
  cb([a]);
};
const f3 = (a, b, cb) => {
  setTimeout(() => {
    cb([a, b]), 1000;
  });
};
// Виклик функції
bulkRun([
  [f1, []],
  [f2, [2]],
  [f3, [3, 4]],
]).then(console.log);
